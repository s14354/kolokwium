// <auto-generated />
using System;
using APBD_KOL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APBD_KOL.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APBD_KOL.Models.Artist", b =>
                {
                    b.Property<int>("IdArtist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("IdArtist");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            IdArtist = 1,
                            Nickname = "Artist1"
                        },
                        new
                        {
                            IdArtist = 2,
                            Nickname = "Artist2"
                        });
                });

            modelBuilder.Entity("APBD_KOL.Models.Artist_Event", b =>
                {
                    b.Property<int>("IdArtist")
                        .HasColumnType("int");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int");

                    b.Property<DateTime>("PerformanceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdArtist", "IdEvent");

                    b.HasIndex("IdEvent");

                    b.ToTable("Artist_Events");

                    b.HasData(
                        new
                        {
                            IdArtist = 1,
                            IdEvent = 1,
                            PerformanceDate = new DateTime(2020, 6, 21, 17, 33, 15, 605, DateTimeKind.Local).AddTicks(7540)
                        },
                        new
                        {
                            IdArtist = 2,
                            IdEvent = 2,
                            PerformanceDate = new DateTime(2020, 6, 21, 17, 33, 15, 605, DateTimeKind.Local).AddTicks(8312)
                        });
                });

            modelBuilder.Entity("APBD_KOL.Models.Event", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("StastDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdEvent");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            IdEvent = 1,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Event1",
                            StastDate = new DateTime(2020, 6, 21, 17, 33, 15, 600, DateTimeKind.Local).AddTicks(4960)
                        },
                        new
                        {
                            IdEvent = 2,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Event2",
                            StastDate = new DateTime(2020, 6, 21, 17, 33, 15, 605, DateTimeKind.Local).AddTicks(4039)
                        });
                });

            modelBuilder.Entity("APBD_KOL.Models.Event_Organiser", b =>
                {
                    b.Property<int>("IdEvent")
                        .HasColumnType("int");

                    b.Property<int>("IdOrganiser")
                        .HasColumnType("int");

                    b.HasKey("IdEvent", "IdOrganiser");

                    b.HasIndex("IdOrganiser");

                    b.ToTable("Event_Organisers");

                    b.HasData(
                        new
                        {
                            IdEvent = 1,
                            IdOrganiser = 1
                        },
                        new
                        {
                            IdEvent = 2,
                            IdOrganiser = 2
                        });
                });

            modelBuilder.Entity("APBD_KOL.Models.Organiser", b =>
                {
                    b.Property<int>("IdOrganiser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("IdOrganiser");

                    b.ToTable("Organiser");

                    b.HasData(
                        new
                        {
                            IdOrganiser = 1,
                            Name = "Org1"
                        },
                        new
                        {
                            IdOrganiser = 2,
                            Name = "Org2"
                        });
                });

            modelBuilder.Entity("APBD_KOL.Models.Artist_Event", b =>
                {
                    b.HasOne("APBD_KOL.Models.Artist", "Artist")
                        .WithMany("Artist_Events")
                        .HasForeignKey("IdArtist")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD_KOL.Models.Event", "Event")
                        .WithMany("Artist_Events")
                        .HasForeignKey("IdEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APBD_KOL.Models.Event_Organiser", b =>
                {
                    b.HasOne("APBD_KOL.Models.Event", "Event")
                        .WithMany("Event_Organisers")
                        .HasForeignKey("IdEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD_KOL.Models.Organiser", "Organiser")
                        .WithMany("Event_Organisers")
                        .HasForeignKey("IdOrganiser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
